Code: 00 66 66 66 66 90 55 48 63 c7 48 8d 14 40 48 89 e5 48 83 ec 20 48 89 5d f0 48 8d 1c 90 48 03 1d ed 2d 00 00 4c 89 65 f8 41 89 fc <80> 7b 05 00 74 10 48 89 d8 4c 8b 65 f8 48 8b 5d f0 c9 c3 0f 1f
All code
========
   0:	00 66 66             	add    %ah,0x66(%rsi)
   3:	66 66 90             	data32 xchg %ax,%ax
   6:	55                   	push   %rbp
   7:	48 63 c7             	movslq %edi,%rax
   a:	48 8d 14 40          	lea    (%rax,%rax,2),%rdx
   e:	48 89 e5             	mov    %rsp,%rbp
  11:	48 83 ec 20          	sub    $0x20,%rsp
  15:	48 89 5d f0          	mov    %rbx,-0x10(%rbp)
  19:	48 8d 1c 90          	lea    (%rax,%rdx,4),%rbx
  1d:	48 03 1d ed 2d 00 00 	add    0x2ded(%rip),%rbx        # 0x2e11
  24:	4c 89 65 f8          	mov    %r12,-0x8(%rbp)
  28:	41 89 fc             	mov    %edi,%r12d
  2b:*	80 7b 05 00          	cmpb   $0x0,0x5(%rbx)     <-- trapping instruction
  2f:	74 10                	je     0x41
  31:	48 89 d8             	mov    %rbx,%rax
  34:	4c 8b 65 f8          	mov    -0x8(%rbp),%r12
  38:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
  3c:	c9                   	leaveq 
  3d:	c3                   	retq   
  3e:	0f                   	.byte 0xf
  3f:	1f                   	(bad)  

Code starting with the faulting instruction
===========================================
   0:	80 7b 05 00          	cmpb   $0x0,0x5(%rbx)
   4:	74 10                	je     0x16
   6:	48 89 d8             	mov    %rbx,%rax
   9:	4c 8b 65 f8          	mov    -0x8(%rbp),%r12
   d:	48 8b 5d f0          	mov    -0x10(%rbp),%rbx
  11:	c9                   	leaveq 
  12:	c3                   	retq   
  13:	0f                   	.byte 0xf
  14:	1f                   	(bad)  
