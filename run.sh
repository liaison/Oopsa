#!/bin/bash

# Environment parameter for the debugging of parse that is generated by ocamlyacc 
#export OCAMLRUNPARAM='p'

# Turn on the backtrace recording so that the function Printexc.print_backtrace works.
#export OCAMLRUNPARAM='b'

# Unset the debugging parameter 
export OCAMLRUNPARAM=''

# Print the command itself set '-x' or disable the printing with '+x' 
set +x 

TEST_CASE_DIR=./testcases

function test_lst_parser {
    echo "Test the *.lst file parser." 
    ./codeparser -m lst $TEST_CASE_DIR/filesystems_proc_show.lst
    ret_val=`expr $ret_val + $?` 
}

function test_decodeoops_parser {
    echo "Test the 'decodecode' output parser." 
    ./codeparser -m asm $TEST_CASE_DIR/filesystems_proc_show.decodeoops 3
    #./codeparser -m asm $TEST_CASE_DIR/kmem_cache_alloc.decodeoops -1
    ret_val=`expr $ret_val + $?` 
}

function test_query {
    echo "Test the query function" 
    ./codeparser -m query $TEST_CASE_DIR/filesystems_proc_show.lst 3 
    ./codeparser -m lst $TEST_CASE_DIR/show_map_vma.lst
}

function test_match {
    echo "Test the sequence alignment algorithm." 
    ./codeparser -m match $TEST_CASE_DIR/rw_verify_area.lst $TEST_CASE_DIR/rw_verify_area.decodeoops 

    #echo "########### filesystems_proc_show ############" 
    #./codeparser -m match $TEST_CASE_DIR/filesystems_proc_show.lst $TEST_CASE_DIR/filesystems_proc_show.decodeoops 
}

echo "TEST START:" 
ret_val=0

#test_lst_parser

test_decodeoops_parser

#test_query

#test_match 



echo "Num of failure cases: $ret_val" 

echo "TEST END."



